{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAqCA,SAASC,EAAiBC,EAAUC,IAdpC,SAAuBD,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,KAKLQ,CAAcT,EAAUC,GACrBS,MAAK,SAAAC,G,IAAGC,EAAQD,EAARX,SAAUa,EAAKF,EAALV,MACjBa,EAAAjB,GAASkB,OAAOC,QACd,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,MAC5C,CACAK,QAAS,K,IAKdC,OAAM,SAAAR,G,IAAGC,EAAQD,EAARX,SAAUa,EAAKF,EAALV,MAClBa,EAAAjB,GAASkB,OAAOK,QAAQ,sBAAuCH,OAAfL,EAAS,QAAYK,OAANJ,EAAM,MAAK,CACtEK,QAAO,K,IAhDFG,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAiBC,GACfA,EAAMC,iBAKN,IAHA,IAAgCC,EAAAF,EAAMG,cAAcC,SAA5C3B,EAAwByB,EAAxBzB,MAAO4B,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACjBC,EAAYC,OAAO/B,EAAMgC,OAEpBC,EAAI,EAAGA,GAAKJ,EAAOG,MAAOC,GAAK,EAC5B,IAANA,IAGFH,GAAaC,OAAOH,EAAKI,QAFzBlC,EAAiBmC,EAAGH,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onStart);\n\nfunction onStart(event) {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.currentTarget.elements;\n  let delayStep = Number(delay.value);\n\n  for (let i = 1; i <= amount.value; i += 1) {\n    if (i === 1) {\n      getResultPromise(i, delayStep);\n    } else {\n      delayStep += Number(step.value);\n\n      getResultPromise(i, delayStep);\n    }\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction getResultPromise(position, delay) {\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(\n        `✅ Fulfilled promise ${position} in ${delay}ms`,\n        {\n          timeout: 5000,\n        }\n      );\n      // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n        timeout: 5000,\n      });\n      // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$getResultPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","param","_$position","_$delay","$parcel$interopDefault","Notify","success","concat","timeout","catch","failure","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","step","amount","delayStep","Number","value","i"],"version":3,"file":"03-promises.930298a2.js.map"}